drop table if exists messages;
create table messages
(
  id         bigint generated by default as identity primary key,
  created_at timestamp with time zone default now() not null,
  text       text                                   not null,
  user_id    uuid                                   not null
);

-- add a foreign key constraint to the auth.users table
alter table messages
  add constraint messages_user_id_fkey foreign key (user_id) references auth.users (id);


drop policy if exists "Enable read access for all users" on messages;
-- CREATE POLICY "Enable read access for all users" ON "public"."messages"
-- AS PERMISSIVE FOR SELECT
-- TO authenticated
-- USING (true)

drop policy if exists "Enable select for users based on user_id" on messages;
CREATE POLICY "Enable select for users based on user_id" ON "public"."messages"
  AS PERMISSIVE FOR SELECT
  TO authenticated
  USING (auth.uid() = user_id);

drop policy if exists "Enable read access for all users" on messages;
CREATE POLICY "Enable insert for service_role only" ON "public"."messages"
  AS PERMISSIVE FOR INSERT
  TO service_role
  WITH CHECK (true);

-- enable row level security
alter table messages
  enable row level security;
