name: CI Main

on:
  push:
    branches: [ main ]

env:
  NX_CLOUD_ACCESS_TOKEN: ${{ secrets.NX_CLOUD_ACCESS_TOKEN }}

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [ 23 ]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 50

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9

      # - name: Lint commits
      #   uses: wagoid/commitlint-github-action@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'pnpm'
          cache-dependency-path: 'pnpm-lock.yaml'

      - name: Install Dependencies
        run: pnpm install

      - name: Run linter
        run: pnpm run lint
        env:
          NX_BRANCH: ${{ github.event.number }}
          NX_RUN_GROUP: ${{ github.run_id }}

      - name: Run tests
        run: pnpm run test
        env:
          NX_BRANCH: ${{ github.event.number }}
          NX_RUN_GROUP: ${{ github.run_id }}

      - name: Build Packages
        run: pnpm run build-gh-pages
        env:
          NX_BRANCH: ${{ github.event.number }}
          NX_RUN_GROUP: ${{ github.run_id }}

      - name: Setup Pages
        uses: actions/configure-pages@v5
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Upload dist/apps/client
          path: 'dist/apps/client'

      # - name: Zip Packages for GitHub deploy
      #   run: npm run zip

      # - name: Release notes
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #     NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      #   run: npx semantic-release

  # Deploy job
  deploy:
    # Add a dependency to the build job
    needs: build

    # Grant GITHUB_TOKEN the permissions required to make a Pages deployment
    permissions:
      pages: write      # to deploy to Pages
      id-token: write   # to verify the deployment originates from an appropriate source

    # Deploy to the github-pages environment
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    # Specify runner + deployment step
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
