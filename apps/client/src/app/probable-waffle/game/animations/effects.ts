// The constants with the animation keys.
// GENERATED BY PHASER EDITOR AND MANUALLY TRANSFERRED TO SRC

export class EffectsAnims {
  private static readonly GroupKeyName = "effects_1";

  static readonly ANIM_BLOOD_SPLATTER_SMALL_1 = "blood_splatter_small_1";

  static readonly ANIM_BLOOD_SPLATTER_SMALL_2 = "blood_splatter_small_2";

  static readonly ANIM_BLOOD_SPLATTER_SMALL_3 = "blood_splatter_small_3";

  static readonly ANIM_BLOOD_SPLATTER_SMALL_4 = "blood_splatter_small_4";

  static readonly ANIM_BLOOD_SPLATTER_SMALL_5 = "blood_splatter_small_5";

  static readonly ANIM_IMPACT_0 = "impact_0";
  static readonly ANIM_IMPACT_1 = "impact_1";
  static readonly ANIM_IMPACT_2 = "impact_2";
  static readonly ANIM_IMPACT_3 = "impact_3";
  static readonly ANIM_IMPACT_4 = "impact_4";
  static readonly ANIM_IMPACT_5 = "impact_5";
  static readonly ANIM_IMPACT_6 = "impact_6";
  static readonly ANIM_IMPACT_7 = "impact_7";
  static readonly ANIM_IMPACT_8 = "impact_8";
  static readonly ANIM_IMPACT_9 = "impact_9";
  static readonly ANIM_IMPACT_10 = "impact_10";
  static readonly ANIM_IMPACT_11 = "impact_11";
  static readonly ANIM_IMPACT_12 = "impact_12";
  static readonly ANIM_IMPACT_13 = "impact_13";
  static readonly ANIM_IMPACT_14 = "impact_14";
  static readonly ANIM_IMPACT_15 = "impact_15";
  static readonly ANIM_IMPACT_16 = "impact_16";
  static readonly ANIM_IMPACT_17 = "impact_17";
  static readonly ANIM_IMPACT_18 = "impact_18";
  static readonly ANIM_IMPACT_19 = "impact_19";
  static readonly ANIM_IMPACT_20 = "impact_20";
  static readonly ANIM_IMPACT_21 = "impact_21";
  static readonly ANIM_IMPACT_22 = "impact_22";
  static readonly ANIM_IMPACT_23 = "impact_23";

  static readonly createAndPlayEffectAnimation = (
    scene: Phaser.Scene,
    anim: string,
    x: number,
    y: number
  ): Phaser.GameObjects.Sprite => {
    // create sprite and play anim
    const impactSprite = scene.add.sprite(x, y, EffectsAnims.GroupKeyName, "impact/1/1/0.png");
    impactSprite.play(anim);
    impactSprite.once("animationcomplete", () => {
      impactSprite.destroy();
    });
    return impactSprite;
  };

  static readonly createAndPlayBloodAnimation = (
    scene: Phaser.Scene,
    x: number,
    y: number
  ): Phaser.GameObjects.Sprite => {
    const bloodAnims = [
      EffectsAnims.ANIM_BLOOD_SPLATTER_SMALL_1,
      EffectsAnims.ANIM_BLOOD_SPLATTER_SMALL_2,
      EffectsAnims.ANIM_BLOOD_SPLATTER_SMALL_3,
      EffectsAnims.ANIM_BLOOD_SPLATTER_SMALL_4,
      EffectsAnims.ANIM_BLOOD_SPLATTER_SMALL_5
    ];
    const randomBloodAnim = bloodAnims[Math.floor(Math.random() * bloodAnims.length)];
    return this.createAndPlayEffectAnimation(scene, randomBloodAnim, x, y);
  };

  static readonly fireImpacts = [
    EffectsAnims.ANIM_IMPACT_0,
    EffectsAnims.ANIM_IMPACT_1,
    EffectsAnims.ANIM_IMPACT_2,
    EffectsAnims.ANIM_IMPACT_3,
    EffectsAnims.ANIM_IMPACT_4,
    EffectsAnims.ANIM_IMPACT_5,
    EffectsAnims.ANIM_IMPACT_6,
    EffectsAnims.ANIM_IMPACT_7,
    EffectsAnims.ANIM_IMPACT_8,
    EffectsAnims.ANIM_IMPACT_9,
    EffectsAnims.ANIM_IMPACT_10,
    EffectsAnims.ANIM_IMPACT_11,
    EffectsAnims.ANIM_IMPACT_12,
    EffectsAnims.ANIM_IMPACT_13,
    EffectsAnims.ANIM_IMPACT_14,
    EffectsAnims.ANIM_IMPACT_15,
    EffectsAnims.ANIM_IMPACT_16,
    EffectsAnims.ANIM_IMPACT_17,
    EffectsAnims.ANIM_IMPACT_18,
    EffectsAnims.ANIM_IMPACT_19,
    EffectsAnims.ANIM_IMPACT_20,
    EffectsAnims.ANIM_IMPACT_21,
    EffectsAnims.ANIM_IMPACT_22,
    EffectsAnims.ANIM_IMPACT_23
  ];
}
